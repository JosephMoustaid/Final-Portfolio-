{"version":3,"file":"static/js/623.7653b0bb.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs"],"sourcesContent":["import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n"],"names":["toPropertyKey","t","i","r","e","Symbol","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","n","hasOwnProperty","indexOf","propertyIsEnumerable","_typeof","iterator","constructor","prototype","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","state","values","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","positionalKeys","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","noop","clearTime","time","newTime","queueMicrotask","addUniqueItem","arr","item","removeItem","index","splice","SubscriptionManager","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","_this","options","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","_objectSpread","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","startsWith","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","_ref","red","green","blue","alpha$1","hex","g","substring","parseInt","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_a","_b","getAnimatableNone","parsed","transformer","map","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","duration","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","flatten","ease","mixNumber","to","progress","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","secondsToMilliseconds","dampingRatio","millisecondsToSeconds","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","some","spring","optionsOrVisualDuration","done","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","generator","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","calcGeneratorDuration","maxGeneratorDuration","generateLinearEasing","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","easingDefinitionToFunction","isBezierDefinition","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","memo","Element","unsupportedEasingFunctions","AcceleratedAnimation","supportsLinearEasing","isWaapiSupportedEasing","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","mapEasingToNativeEasing","animate","iterations","direction","startWaapiAnimation","pendingTimeline","attachTimeline","onfinish","playbackRate","playState","timeline","_this$options2","_excluded2","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","transition","isHandoff","valueTransition","getValueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","GroupPlaybackControls","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","passive","addEventListener","removeEventListener","extractEventInfo","event","point","pageX","pageY","addPointerEvent","isPrimaryPointer","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","setDragLock","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","press","endEvent","success","useGlobalTarget","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","createDomVisualElement","motion","supportsScrollTimeline","ScrollTimeline","BaseGroupPlaybackControls","runAll","finished","getAll","propName","setAll","newValue","methodName","onResolve","onReject","catch","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","resolution","points","numPoints","supportedWaapiEasing","every","cubicBezierAsString","segmentEasing","isDragActive","resolveElements","elementOrSelector","scope","selectorCache","elements","querySelectorAll","setupGesture","gestureAbortController","AbortController","signal","abort","filterEvents","pointerType","onHoverStart","eventOptions","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","isNodeOrChild","parentElement","button","isPrimary","focusableElements","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","currentTarget","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","onPressStart","cancelEvents","startPress","onPressEnd","onPointerEnd","onPointerUp","onPointerCancel","upEvent","cancelEvent","isElementKeyboardAccessible","any","toFromDifference","seconds","milliseconds"],"sourceRoot":""}